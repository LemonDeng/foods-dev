<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dzl.mapper.ItemsMapperCustom">


    <!--resultType映射一个自定义的Pojo,作为显示层的对象去展示的-->
    <select id="queryItemComments" parameterType="Map" resultType="com.dzl.pojo.vo.ItemCommentVO">

        SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
        FROM
        items_comments ic
        LEFT JOIN
        users u
        ON
        ic.user_id = u.id
        WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test=" paramsMap.level != null and paramsMap.level != '' ">
            AND ic.comment_level = #{paramsMap.level}
        </if>
    </select>


    <select id="searchItems" parameterType="Map" resultType="com.dzl.pojo.vo.SearchItemsVO">
        SELECT
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price
            FROM
            items i
            LEFT JOIN
            items_img ii
            ON
            i.id = ii.item_id
            LEFT JOIN
                        -- --临时表的关联查询 --
            (
             SELECT
                item_id,
                MIN(price_discount) as price_discount
                FROM
                items_spec
--                 GROUP BY 语句用于结合聚合函数，根据一个或多个列对结果集进行分组。
                GROUP BY
                item_id
                ) AS tempSpec
             ON
                i.id = tempSpec.item_id
               WHERE
               ii.is_main = 1
        <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
--         like模糊查询
            AND i.item_name like '%${paramsMap.keywords}%'
        </if>
--         三种排序规则，默认排序（根据名称）销量排序，价格排序
-- 使用 order by会包含三种类型
        order by
--         choose多条件的判断
-- k:默认排序
-- c:根据销售量排序
-- p：根据价格排序
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.dzl.pojo.vo.SearchItemsVO">
        SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
        FROM
        items i
        LEFT JOIN
        items_img ii
        ON
        i.id = ii.item_id
        LEFT JOIN
        -- --临时表的关联查询 --
        (
        SELECT
        item_id,
        MIN(price_discount) as price_discount
        FROM
        items_spec
        --                 GROUP BY 语句用于结合聚合函数，根据一个或多个列对结果集进行分组。
        GROUP BY
        item_id
        ) AS tempSpec
        ON
        i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        and
        i.cat_id = #{paramsMap.catId}
        --         三种排序规则，默认排序（根据名称）销量排序，价格排序
        -- 使用 order by会包含三种类型
        order by
        --         choose多条件的判断
        -- k:默认排序
        -- c:根据销售量排序
        -- p：根据价格排序
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

</mapper>